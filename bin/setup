#!/bin/bash

set -euo pipefail

# Ask for the administrator password upfront
sudo -v

# Keep-alive: update existing `sudo` time stamp until `setup` has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

# ==============================================================================
# HOME
# ==============================================================================

echo "------------------------------"
echo "Adding home folders"

home_folders=(
  ".ctags.d"
  ".npm-packages"
  ".ssh/sockets"
  ".ssl"
  ".zsh/cache"
  "bin"
  "labs"
  "repos"
)
for home_folder in "${home_folders[@]}"; do
  mkdir -p "${HOME}/$home_folder"
done

# ==============================================================================
# MACOS
# ==============================================================================

echo "------------------------------"
echo "Updating macOS. If this requires a restart, run the script again."

sudo softwareupdate -iaR --verbose

# ==============================================================================
# XCODE COMMAND LINE TOOLS
# ==============================================================================

if [ -f "$(xcode-select -v)" ]; then
  echo "------------------------------"
  echo "Installing Xcode Command Line Tools"

  xcode-select --install
fi

# ==============================================================================
# HOMEBREW
# ==============================================================================

if [ -f "$(brew -v)" ]; then
  echo "------------------------------"
  echo "Installing Homebrew"

  /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
fi

echo "------------------------------"
echo "Installing global Homebrew packages"

brew update
brew upgrade

homebrew_packages=(
  "git"
  "zsh"
  "vim"
  "neovim"
  "tmux"
  "node"
  "yarn"
)
for homebrew_package in "${homebrew_packages[@]}"; do
  brew install "$homebrew_package"
done

brew cleanup

# ==============================================================================
# ZPLUG
# ==============================================================================

ZPLUG_DIR="${HOME}/.zplug"
if [ ! -s "$ZPLUG_DIR" ]; then
  echo "------------------------------"
  echo "Installing zplug"

  curl -sL --proto-redir -all,https https://raw.githubusercontent.com/zplug/installer/master/installer.zsh | zsh
fi

# ==============================================================================
# VIM-PLUG
# ==============================================================================

VIMPLUG_DIR="${HOME}/.local/share/nvim/site/autoload/plug.vim"
if [ ! -s "$VIMPLUG_DIR" ]; then
  echo "------------------------------"
  echo "Installing vim-plug"

  curl -fLo "$VIMPLUG_DIR" --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
fi

# ==============================================================================
# TMUX PLUGIN MANAGER
# ==============================================================================

TPM_DIR="${HOME}/.tmux/plugins/tpm"
if [ ! -s "$TPM_DIR" ]; then
  echo "------------------------------"
  echo "Installing Tmux Plugin Manager"

  git clone https://github.com/tmux-plugins/tpm "$TPM_DIR"
fi

# ==============================================================================
# RESTART
# ==============================================================================

sudo shutdown -r now
