#!/bin/bash

set -euo pipefail

DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
FUNCTIONS="${DIR}/functions"

if [ -e "$FUNCTIONS" ]; then
  source "$FUNCTIONS"
else
  printf "\n ⚠️ functions not found!\n"
  exit 1
fi

default='true'
composer=''
homebrew=''
mas=''
npm=''
os=''
ruby=''
tmux=''
vim=''

function HELP {
  echo
  printf "  Usage:\n"
  printf "    $ upgrade [options]\n\n"
  echo "  Options:"
  echo "    -a   Upgrade all"
  echo "    -c   Upgrade Composer packages"
  echo "    -h   Upgrade Homebrew packages"
  echo "    -m   Upgrade Mac App Store apps"
  echo "    -n   Upgrade npm packages"
  echo "    -o   Upgrade macOS"
  echo "    -r   Upgrade Ruby gems"
  echo "    -t   Upgrade Tmux plugins"
  echo "    -v   Upgrade Vim plugins"
  echo
  printf "  Other options:\n"
  printf "    -H   Display command-specific help\n\n"
  echo "  Default:"
  echo "    $ upgrade -c -h -m -n -r -t -v"
  exit 1
}

while getopts 'achmnortvH' flag; do
  case "${flag}" in
    c) composer='true' default='' ;;
    h) homebrew='true' default='' ;;
    m) mas='true' default='' ;;
    n) npm='true' default='' ;;
    o) os='true' default='' ;;
    r) ruby='true' default='' ;;
    t) tmux='true' default='' ;;
    v) vim='true' default='' ;;
    a) homebrew='true'
       mas='true'
       npm='true'
       os='true'
       ruby='true'
       vim='true'
       tmux='true' ;;
    H) HELP
       exit 1 ;;
    *) HELP
       exit 1 ;;
  esac
done

# ==============================================================================
# HOMEBREW
# ==============================================================================

if [ $homebrew ] || [ $default ]; then
  title "Upgrading Homebrew packages"
  echo
  brew -v update
  brew upgrade --force-bottle
  title "Upgrading Homebrew casks"
  echo
  brew cu --all
  title "Brew cleanup"
  echo
  brew -v cleanup
  brew -v doctor
fi

# ==============================================================================
# NPM
# ==============================================================================

if [ $npm ] || [ $default ]; then
  title "Upgrading npm packages"
  echo
  npx npm-check -gu
fi

# ==============================================================================
# RUBY
# ==============================================================================

if [ $ruby ] || [ $default ]; then
  title "Upgrading Ruby gems"
  echo
  gem update --system
  gem update --no-document
fi

# ==============================================================================
# COMPOSER
# ==============================================================================

if [ $composer ] || [ $default ]; then
  title "Upgrading Composer packages"
  echo
  composer global update
fi

# ==============================================================================
# VIM
# ==============================================================================

if [ $vim ] || [ $default ]; then
  title "Upgrading Vim plugins"
  echo
  nvim +PlugUpgrade +PlugInstall +PlugUpdate +PlugClean +qall
  printf "Done!\n"
fi

# ==============================================================================
# TMUX
# ==============================================================================

if [ $tmux ] || [ $default ]; then
  if ! { [ "$TERM" = "screen" ] && [ -n "$TMUX" ]; } then
    title "Upgrading Tmux plugins"
    echo
    ~/.tmux/plugins/tpm/bin/update_plugins all
    ~/.tmux/plugins/tpm/bin/clean_plugins
  fi
fi

# ==============================================================================
# MAC APP STORE
# ==============================================================================

if [ $mas ] || [ $default ]; then
  title "Upgrading Mac App Store apps"
  echo
  mas upgrade
fi

# ==============================================================================
# MACOS
# ==============================================================================

if [ $os ]; then
  title "Upgrading macOS"
  echo
  sudo softwareupdate -iaR --verbose
fi
